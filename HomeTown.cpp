#include "HomeTown.h"

//Constructor.
HomeTown::HomeTown(ImageStore *imageStore , DrawRepository *drawRepository ,
    GameManager *gameManager , FontStore *fontStore){

    this->imageStore = imageStore;
    this->drawRepository = drawRepository;
    this->sizeHomeTownLayout = HOME_TOWN_LAYOUT_SIZE;

    backgroundLayerLayout = NULL;
    collisionLayerLayout = NULL;
    canGoBehindLayerLayout = NULL;

    this->gameManager = gameManager;
    this->fontStore = fontStore;
}

//Destructor.
HomeTown::~HomeTown(){

    vector<Scenery*>::iterator sceneryIter = sceneries.begin();

    while(sceneryIter != sceneries.end()){

        delete (*sceneryIter);
        (*sceneryIter) = NULL;
        sceneryIter++;
    }

    sceneries.clear();

    vector<Tangible*>::iterator tangiblesIter = tangibles.begin();

    while(tangiblesIter != tangibles.end()){

        delete (*tangiblesIter);
        (*tangiblesIter) = NULL;
        tangiblesIter++;
    }

    tangibles.clear();

    vector<Layer*>::iterator layerIter = layers.begin();

    while(layerIter != layers.end()){

        delete (*layerIter);
        (*layerIter) = NULL;
        layerIter++;
    }
    layers.clear();

    deleteAllLayerConfigurations();
}

//Loads all the default values and objects.
void HomeTown::loadDefaults(){

    this->loadSceneries();
    this->loadTangibles();
    this->loadAllMapConfigurationsForLayers();
    this->loadLayers();
}

//Loads all the cloud Scenery objects.
void HomeTown::loadSceneries(){

    Scenery *cloud1 = new Scenery(imageStore->getBitMap("cloud") , SCREEN_W , 0 , -4 , 1);
    cloud1->setDX(80);    cloud1->setDY(0);
    Scenery *cloud2 = new Scenery(imageStore->getBitMap("cloud") , SCREEN_W , 40 , -8 , 0);
    cloud2->setDX(500);    cloud2->setDY(40);
    Scenery *cloud3 = new Scenery(imageStore->getBitMap("cloud") , SCREEN_W , 80 , -6 , 0);
    cloud3->setDX(540);    cloud3->setDY(80);
    Scenery *cloud4 = new Scenery(imageStore->getBitMap("cloud") , SCREEN_W , 120 , -10 , 2);
    cloud4->setDX(290);   cloud4->setDY(120);
    Scenery *cloud5 = new Scenery(imageStore->getBitMap("cloud") , SCREEN_W , 160 , -3 , 0);
    cloud5->setDX(360);    cloud5->setDY(160);
    Scenery *cloud6 = new Scenery(imageStore->getBitMap("cloud") , SCREEN_W , 200 , -2 , 0);
    cloud6->setDX(430);    cloud6->setDY(200);
    Scenery *cloud7 = new Scenery(imageStore->getBitMap("cloud") , SCREEN_W , 240 , -8 , -2);
    cloud7->setDX(150);    cloud7->setDY(240);
    Scenery *cloud8 = new Scenery(imageStore->getBitMap("cloud") , SCREEN_W , 280 , -9 , 0);
    cloud8->setDX(220);    cloud8->setDY(280);
    Scenery *cloud9 = new Scenery(imageStore->getBitMap("cloud") , SCREEN_W , 380 , -5 , -1);
    cloud9->setDX(SCREEN_W);    cloud9->setDY(380);

    this->loadScenery(cloud1);
    this->loadScenery(cloud2);
    this->loadScenery(cloud3);
    this->loadScenery(cloud4);
    this->loadScenery(cloud5);
    this->loadScenery(cloud6);
    this->loadScenery(cloud7);
    this->loadScenery(cloud8);
    this->loadScenery(cloud9);
}

void HomeTown::loadTangibles(){

    NPCWithDialogue *talkingRock = new NPCWithDialogue(imageStore->getBitMap("rock") ,
        PixelConversion::convertTilesToPixels(26) , 
        PixelConversion::convertTilesToPixels(26) ,
        this->drawRepository ,
        this->gameManager , "Mighty Rock: I'm a rock, are you really trying to talk to a rock?" ,
        this->fontStore->getFont("default"));
    talkingRock->createCharacter(32 , 32 , 60 , 1 , 4 , this);

    NPCWithDialogue *storeOwner = new NPCWithDialogue(imageStore->getBitMap("player") ,
        PixelConversion::convertTilesToPixels(25) , 
        PixelConversion::convertTilesToPixels(25) ,
        this->drawRepository ,
        this->gameManager , "Store Owner: Help! The town is deserted. You need to figure out what happened!",
        this->fontStore->getFont("default"));
    storeOwner->createCharacter(32 , 32 , 90 , 2 , 4 , this);
    storeOwner->setCW(32);
    storeOwner->setCH(32);
    storeOwner->setCharacterFacing(DOWN);

    NPCWithDialogue *mysteriousMan = new NPCWithDialogue(imageStore->getBitMap("mysteriousMan") ,
        PixelConversion::convertTilesToPixels(3) , 
        PixelConversion::convertTilesToPixels(3) ,        
        this->drawRepository ,
        this->gameManager , "Mysterious Man: Hey you, come here. I have a secret I need to tell you. It's about"
        "the mysterious dickle punch. Learn it and you ascertain great power... at a price..." ,
        this->fontStore->getFont("default"));
    mysteriousMan->createCharacter(32 , 32 , 60 , 2 , 4 , this);
    mysteriousMan->setCW(32);
    mysteriousMan->setCH(32);
    mysteriousMan->setCharacterFacing(DOWN);

    NPCWithDialogue *witch = new NPCWithDialogue(imageStore->getBitMap("witch") ,
        PixelConversion::convertTilesToPixels(46) , 
        PixelConversion::convertTilesToPixels(4) ,        
        this->drawRepository ,
        this->gameManager , "Witch: There sure are some extreme seasons in this country." ,
        this->fontStore->getFont("default"));
    witch->createCharacter(32 , 32 , 60 , 2 , 4 , this);
    witch->setCW(32);
    witch->setCH(32);
    witch->setCharacterFacing(DOWN);

    NPCWithDialogue *strife = new NPCWithDialogue(imageStore->getBitMap("strife") ,
        PixelConversion::convertTilesToPixels(33) , 
        PixelConversion::convertTilesToPixels(36) ,        
        this->drawRepository ,
        this->gameManager , "Strife: I don't need these shades with all the clouds in the sky." ,
        this->fontStore->getFont("default"));
    strife->createCharacter(32 , 32 , 60 , 2 , 4 , this);
    strife->setCW(32);
    strife->setCH(32);
    strife->setCharacterFacing(DOWN);

    NPCWithDialogue *monk = new NPCWithDialogue(imageStore->getBitMap("monk") ,
        PixelConversion::convertTilesToPixels(9) , 
        PixelConversion::convertTilesToPixels(40) ,        
        this->drawRepository ,
        this->gameManager , "Monk: Monk monk monk monk monk monk... MONK!" ,
        this->fontStore->getFont("default"));
    monk->createCharacter(32 , 32 , 60 , 2 , 4 , this);
    monk->setCW(32);
    monk->setCH(32);
    monk->setCharacterFacing(DOWN);

    NPCWithDialogue *clod = new NPCWithDialogue(imageStore->getBitMap("clod") ,
        PixelConversion::convertTilesToPixels(8) , 
        PixelConversion::convertTilesToPixels(19) ,        
        this->drawRepository ,
        this->gameManager , "Clod: I am the proud one!" ,
        this->fontStore->getFont("default"));
    clod->createCharacter(32 , 32 , 60 , 2 , 4 , this);
    clod->setCW(32);
    clod->setCH(32);
    clod->setCharacterFacing(DOWN);

    NPCWithDialogue *joanna = new NPCWithDialogue(imageStore->getBitMap("joanna") ,
        PixelConversion::convertTilesToPixels(8) , 
        PixelConversion::convertTilesToPixels(19) ,        
        this->drawRepository ,
        this->gameManager , "Joanna: Dickle punch with lightning!" ,
        this->fontStore->getFont("default"));
    joanna->createCharacter(32 , 32 , 60 , 2 , 4 , this);
    joanna->setCW(32);
    joanna->setCH(32);
    joanna->setCharacterFacing(DOWN);

    this->loadTangible(talkingRock);
    this->loadTangible(storeOwner);
    this->loadTangible(mysteriousMan);
    this->loadTangible(witch);
    this->loadTangible(strife);
    this->loadTangible(monk);
    this->loadTangible(clod);
    this->loadTangible(joanna);
}

//Loads all the layers to the areaMap.
void HomeTown::loadLayers(){

    Layer *backgroundLayer = new Layer(imageStore->getBitMap("terrain") ,
        50 , 50 , this->backgroundLayerLayout , 2500);
    Layer *collisionLayer = new Layer(imageStore->getBitMap("town") ,
        50 , 50 , this->collisionLayerLayout , 2500);
    Layer *canGoBehindLayer = new Layer(imageStore->getBitMap("town") ,
        50 , 50 , this->canGoBehindLayerLayout , 2500);
   
    this->loadLayer(backgroundLayer);
    this->loadLayer(collisionLayer);
    this->loadLayer(canGoBehindLayer);
}

//Loads all of the map configurations for each of the layers.
void HomeTown::loadAllMapConfigurationsForLayers(){

    loadBackgroundLayerMapConfiguration();
    loadCollisionLayerMapConfiguration();
    loadCanGoBehindLayerMapConfiguration();
}

void HomeTown::loadBackgroundLayerMapConfiguration(){

    int backgroundLayerLayout[] = {
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,
        1,1,2,1,1,1,1,1,3,1,1,1,1,1,2,1,1,1,1,4,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,3,5,3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,
        1,1,1,1,1,1,1,1,6,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,3,3,3,3,3,1,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,7,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,
        1,1,3,3,3,2,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,3,3,3,3,3,1,1,1,1,1,1,4,4,1,4,4,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,8,1,1,1,1,1,6,1,1,1,1,
        1,1,3,3,3,5,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        7,4,1,1,1,1,1,1,1,1,1,1,1,1,1,6,1,1,6,4,7,1,1,1,1,
        1,1,6,3,3,3,3,1,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,4,1,1,1,
        1,1,1,1,1,8,1,1,1,1,1,1,1,1,1,1,6,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,4,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,1,1,1,1,1,1,
        4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,9,1,1,1,1,1,1,1,1,1,1,1,1,
        4,1,1,1,1,1,9,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,8,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,1,1,
        1,1,8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,8,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,7,1,1,1,7,1,1,1,1,1,1,9,7,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,2,1,4,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,7,1,1,1,1,1,1,1,
        1,1,1,2,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,8,1,1,1,1,1,1,1,
        1,1,8,1,1,1,1,1,1,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,4,1,1,
        1,4,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,10,1,1,7,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,8,1,1,1,1,1,1,1,1,1,3,1,1,1,1,1,
        1,1,1,1,7,1,1,7,1,1,2,1,1,1,8,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10,1,1,7,1,
        10,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10,10,1,1,1,1,1,1,1,
        1,1,1,1,1,11,11,1,1,8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,8,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,3,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,3,10,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,7,1,1,1,1,1,1,1,1,1,1,8,1,1,1,1,1,6,1,1,
        1,4,1,1,11,1,1,1,1,1,1,1,11,1,1,1,4,1,1,7,1,1,1,1,1,
        4,1,1,8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,10,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,11,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,3,3,3,1,1,5,5,1,1,1,1,1,1,1,1,
        1,4,1,1,1,1,1,1,1,1,1,1,1,4,1,1,1,10,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,6,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,10,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,4,1,1,1,1,1,1,7,1,1,1,1,6,1,1,10,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,10,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
    }; 

    this->backgroundLayerLayout = new int[this->sizeHomeTownLayout];
    for(int i = 0 ; i < this->sizeHomeTownLayout ; i++)    
        this->backgroundLayerLayout[i] = backgroundLayerLayout[i];
}

void HomeTown::loadCollisionLayerMapConfiguration(){

    int collisionLayerLayout[] ={
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
        0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,15,16, 0, 0, 1, 1,
       1, 1, 0, 0,15,16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0,10,11,11,11,11,12, 0, 0, 0,13, 6, 6, 6, 6,14,20, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0,10,11,11,11,11,12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       21,22,23,23,23,23,24, 0, 0, 0,13, 6, 6, 6, 6,14,25, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0,22,23,23,23,23,24, 0, 0,26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       20,27,28,28,28,28,29, 0, 0, 0,31,28,28,28,28,32, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0,27,28,28,28,28,29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       20,27,35,28,28,35,29, 0, 0, 0,27,35,28,28,35,29, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0,21,27,35,28,28,35,29, 0, 0, 0,37,38, 0, 0, 0, 0, 0, 0, 0, 0,
        0,27,28, 0, 0,28,29, 0, 0, 0,27,28, 0, 0,28,29, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0,21,27,28,28,28,28,29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0,40,41, 0, 0,41,43, 0, 0, 0,40,41, 0, 0,41,43,20, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0,20,40,41,41,41,41,43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0,50, 0, 0,50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0,27,35,29, 0,27,35,29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,60,
        0, 0, 0, 0, 0, 0, 0, 0,21,27,35,29,27,35,29,27,35,29,27,35,29, 0, 0, 1, 1,
       1, 1, 0, 0,61,40,41,43,62,40,41,43,61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,21,40,41,43,40,41,43,40,41,43,40,41,43, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1,65,66,66,67,66,66,66,66,66,67,66,66,65,66,66,67, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0,67,66,66,66,66,66,67,66,66,65,66,66,67,66,66,66, 1, 1,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,70,71,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       1, 1,66,66,66,67,66,66,65,66,66,67,66,66,66,66,66,67, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0,67,66,66,66,66,66,67,66,66,66,66,66,67,66,66,65, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0,74, 0, 0, 0,75,76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,77, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0,61,67, 0, 0, 0, 0, 0, 0, 0, 0,67,61, 0, 0, 0,95,96, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0,51,52,52,52,52,52,52,52,53, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0,101,102,102,102,102,102,102,102,103, 0, 0, 0, 0,
        0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0,104,105,106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,107,35,108,35,108,35,108,35,109, 0, 0, 0, 0,
        0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0,111,112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,40,41,41,41,41,41,41,41,43, 0, 0, 0, 0, 0, 1,
        1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0,61,67, 0, 0, 0, 0, 0, 0, 0, 0,67,61, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0,60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,107,35,35,109, 0, 0, 1,
        1,
       1, 1, 0, 0, 0, 0, 0, 0,33,34,119, 0, 0, 0, 0, 0, 0, 0, 0,120,121, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0,15,16, 0, 0, 0, 0, 0, 0, 0,107, 0, 0,109, 0, 0,
        1, 1,
       1, 1, 0, 0, 0, 0, 0,119,122,123,124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,40, 0, 0,43, 0, 0,
        1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
        0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
        0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
    };

    this->collisionLayerLayout = new int[this->sizeHomeTownLayout];
    for(int i = 0 ; i < this->sizeHomeTownLayout ; i++)    
        this->collisionLayerLayout[i] = collisionLayerLayout[i];
}

void HomeTown::loadCanGoBehindLayerMapConfiguration(){

    int canGoBehindLayerLayout[] ={
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
        0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 2, 3, 3, 3, 3, 4, 0, 0, 0, 5, 6, 6, 6, 6, 7, 0, 0, 0, 8, 9, 0, 0, 1, 1,
       1, 1, 0, 0, 8, 9, 2, 3, 3, 3, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0,10,11,11,11,11,12, 0, 0, 0,13, 6, 6, 6, 6,14, 0, 0, 0,15,16, 0, 0, 1, 1,
       1, 1, 0, 0,15,16,10,11,11,11,11,12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0,10,11,11,11,11,12, 0, 0, 0,13, 6, 6, 6, 6,14, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0,10,11,11,11,11,12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0,10,11,11,11,11,12,17,18,19,13, 6, 6, 6, 6,14,20, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0,10,11,11,11,11,12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       21,22,23,23,23,23,24, 0, 0, 0,13, 6, 6, 6, 6,14,25, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0,22,23,23,23,23,24,17,19,26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       20,27,28,28,28,28,29,30, 0, 0,31,28,28,28,28,32,30, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0,27,28,28,28,28,29, 0, 0, 0,33,34, 0, 0, 0, 0, 0, 0, 0, 0,
       20,27,35,28,28,35,29,36, 0, 0,27,35,28,28,35,29,36, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0,21,27,35,28,28,35,29, 0, 0, 0,37,38, 0, 0, 0, 0, 0, 0, 0, 0,
        0,27,28,39,39,28,29, 0, 0, 0,27,28,39,39,28,29, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0,21,27,28,28,28,28,29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0,40,41,0,0,41,43, 0, 0, 0,40,41,0,0,41,43,20, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0,20,40,41,41,41,41,43,44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0,46, 0, 0,46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0,47,48,49, 0,47,48,49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0,50, 0, 0,50, 0, 0, 0,47,48,49,47,48,49,47,48,49,47,48,49, 0, 0, 1, 1,
       1, 1, 0, 0, 0,51,52,53, 0,51,52,53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0,51,52,53,51,52,53,51,52,53,51,52,53, 0, 0, 1, 1,
       1, 1, 0, 0, 0,54,55,56,57,54,55,56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0,54,55,56,54,55,56,54,55,56,54,55,56, 0, 0, 1, 1,
       1, 1, 0, 0,58,27,35,29,59,27,35,29,58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,60,
        0, 0, 0, 0, 0, 0, 0, 0,21,27,35,29,27,35,29,27,35,29,27,35,29, 0, 0, 1, 1,
       1, 1, 0, 0,61,40,41,43,62,40,41,43,61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,21,40,41,43,40,41,43,40,41,43,40,41,43, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0,63, 0, 0, 0, 0, 0,63, 0, 0, 0, 0, 0,63, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0,63, 0, 0, 0, 0, 0,63, 0, 0, 0, 0, 0,63, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0,64, 0, 0, 0, 0, 0,64, 0, 0, 0, 0, 0,64, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0,64, 0, 0, 0, 0, 0,64, 0, 0, 0, 0, 0,64, 0, 0, 0, 1, 1,
       1, 1,65,66,66,67,66,66,66,66,66,67,66,66,65,66,66,67, 0, 0, 0, 0, 0,68,69,
        0, 0, 0, 0, 0, 0, 0,67,66,66,66,66,66,67,66,66,65,66,66,67,66,66,66, 1, 1,
       0, 0, 0, 0, 0,63, 0, 0, 0, 0, 0,63, 0, 0, 0, 0, 0,63, 0, 0, 0, 0, 0,70,71,
        0, 0, 0, 0, 0, 0, 0,63, 0, 0, 0, 0, 0,63, 0, 0, 0, 0, 0,63, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0,64, 0, 0, 0, 0, 0,64, 0, 0, 0, 0, 0,64, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0,64, 0, 0, 0, 0, 0,64, 0, 0, 0, 0, 0,64, 0, 0, 0, 0, 0,
       1, 1,66,66,66,67,66,66,65,66,66,67,66,66,66,66,66,67, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0,67,66,66,66,66,66,67,66,66,66,66,66,67,66,66,65, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0,44, 0, 0, 0,72,73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0,74, 0, 0, 0,75,76, 0, 0, 0,44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,77, 0, 0, 0,78,79, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0,47,48,48,48,48,48,48,48,49, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0,63, 0, 0, 0, 0, 0, 0, 0, 0,63, 0, 0, 0, 0,80,81, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0,82,83,83,83,83,83,83,83,84, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0,58,64, 0, 0,85,86,87,88, 0, 0,64,58, 0, 0, 0,89,90, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0,82,83,83,83,83,83,83,83,84, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0,61,67, 0, 0,91,92,93,94, 0, 0,67,61, 0, 0, 0,95,96, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0,51,52,52,52,52,52,52,52,53, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0,97,98,99,100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,101,102,102,102,102,102,102,102,103, 0, 0, 0,
        0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0,104,105,106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,107,35,108,35,108,35,108,35,109, 0,110, 0, 0,
        0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0,111,112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,40,41,41,41,41,41,41,41,43, 0,113, 0, 0, 0,
        1, 1,
       1, 1, 0, 0, 0,63, 0, 0, 0, 0, 0, 0, 0, 0,63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 6, 6, 7, 0, 0, 1, 1,
       1, 1, 0, 0,58,64, 0, 0, 0, 0, 0, 0, 0, 0,64,58, 0, 0, 0,114,115, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13, 6, 6,14, 0, 0, 1,
        1,
       1, 1, 0, 0,61,67, 0, 0, 0, 0, 0, 0, 0, 0,67,61, 0, 0, 0,31,32, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,116,102,102,117, 0, 0,
        1, 1,
       1, 1, 0, 0,60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,54,56, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 8, 9, 0, 0, 0, 0, 0, 0, 0,107,35,35,109,118, 0, 1,
        1,
       1, 1, 0, 0, 0, 0, 0, 0,33,34,119, 0, 0, 0, 0, 0, 0, 0, 0,120,121, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0,15,16, 0, 0, 0, 0, 0, 0, 0,107,39,39,109, 0, 0,
        1, 1,
       1, 1, 0, 0, 0, 0, 0,119,122,123,124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,40,0,0,43, 0, 0,
        1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
        0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
        0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
    };

    this->canGoBehindLayerLayout = new int[this->sizeHomeTownLayout];

    for(int i = 0 ; i < this->sizeHomeTownLayout ; i++)    
        this->canGoBehindLayerLayout[i] = canGoBehindLayerLayout[i];
}

void HomeTown::deleteAllLayerConfigurations(){

    delete this->backgroundLayerLayout;
    this->backgroundLayerLayout = NULL;

    delete this->collisionLayerLayout;
    this->collisionLayerLayout = NULL;

    delete this->canGoBehindLayerLayout;
    this->canGoBehindLayerLayout = NULL;
}